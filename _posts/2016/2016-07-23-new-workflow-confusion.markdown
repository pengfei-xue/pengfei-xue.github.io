---
layout: post
title: 'new workflow confusion'
date: 2016-07-23
author: Pengfei.X
version: 0.1
categories: [management,]
---

最近遇到了一些管理上的混乱，新流程的引入，导致了管理的灾难，主要出现的几个问题：

所有产品线的排期都统一管理，开发周内容安排会议上，混乱，无法精细地了解每个产品线的开发内容。产品
层面上来说，对产品线没有很好的定义，导致的问题是，几乎每个需求都会牵扯到所有的产品线。对于Feature
owner来说，需要了解每个产品线的事情，成本太高。而且，目前我们的情况是，没有足够的leader来承担这项
职责。

目前的开发流程，带来的额外问题是，开发人员安排有些难做，一个需求在早期安排了人员参与后（从目前的实
践看来）之后再调整人员，会遇到很多配合方面的问题。上周，就有一个leader跟我说了这个情况，但是，我
也表示比较无奈，需求早期安排人员的时候，没法得知这位同学，在接下来的迭代里面具体会有多少任务量。
于是，出现临时换人属于很正常的事情，我不太理解的是，在开发开始前，更换了开发圆圆，如果产品需求之
前都已经讨论的很好了，那么，基于这个已经确定的需求，开发刚开始的时候换人为什么会导致配合的问题呢。
相应的同学，看一次文档，再了解一下不就ok了么？

人与神话中，有关于进度落后，增加人员的讨论，在过程中增加开发人员，很可能会更加拖后开发的进度，因
为，人多之后组内沟通，对需求理解的一致性以及培训的成本非常大。所以，在开发过程中，需要去尽量避免
掉这个问题，在项目早期就合理预估好开发资源，避免中途出问题。这个对于新人加入团队也有值得参考的意义，
特别是对于临时抽调人员支持的情况。新人在加入团队时，最好安排一些完整的内容去做，另外，新人在早期
需要给他们营造一个单纯一些的环境。主要是，让新人有足够的时间，足够的资源去做好交给他的任务。尽量
把产品需求讲解清楚，明确告诉新人需要做什么。如此做，对新人来说，心理压力会笑很多，任务完成的质量
也会相应提升。对于临时抽调的人员，一个教训是，之后调试，debug的时候，如果他已经被调派回去了，那么
最终，还是要让你来替他完成一些擦屁股的事情。

针对资源安排，jira已经完全应付不了我们的新流程了，所以，只能做了额外的工作去跟踪迭代周期内的开发
内容，比如，在wiki上单独维护一个开发内容列表，里面包含了所有迭代内容，以及相应需求对应的开发，测
试资源。每次需要人员去维护，原本的jira sprint管理也就完全不适用了。

新流程已经使用了差不多3个迭代，但是，有很多同学不知道当前这个版本在做什么，发版的内容是什么，
新版本发出去之后，不知道更新了哪些内容。对后端同学来说，不在乎版本，版本是没有意义。但是，对于客户端
同学来说，版本很重要，他们需要明确的版本号。其实，我们去维护版本号是没有太多成本的，jira的版本功能
已经相当完善，多一个sprint可以归结到某一个版本上去。我最早的想法是将版本与迭代需要分开，但是，由
于测试引入了一个新的工具，导致，版本还是只能跟迭代搅和在一起，有点无奈。

我们启用新流程，关于版本的事情有一个引子，产品部分不想自己去维护产品版本。在我看来，就是产品没有
短，中，长期的规划，导致的一个问题是，需求零散，很多需求没有长期规划，一个需求很可能一个迭代之后
就会被撤掉，而且撤掉的原因不是说试错，我们发现问题主动去下掉这个功能，而是产品没有想清楚，新上
feature之后需要怎么发展。（当然了，也有一些拍脑袋的需求，或者政治类的需求，必须要做）

最近的几个迭代发现，测试成为了我们的瓶颈，开发这边有资源做，但是，测试资源紧缺，无法测完所有内容。
我们目前太依赖于人肉测试，测试团队需要对没想功能都手动去执行测试用例，导致的测试效率以及成本都比较高。
另外，部分同学的开发完成度不高，导致，我们的开发内容提测后，有些实现跟产品需求没有完全对上，或者，
有严重bug，导致测试同学完全没法继续执行下去。所以，现在业务这边在推的几个事情是，完善接口文档，把
项目接入ci做持续集成，帮助测试同学完善自动化测试工具。

接口文档，之前由于人手不够的原因，导致很多接口都没有问题。最早的时候也有一些文档，是按照版本来给
接口文档，对于客户端同学来说非常友好，但是，一个小小的弊端是，对于一个接口的完整性来说很难看，对
于一个接口，比较难确定目前的最新状态是什么样的。我们之前的文档是在gitlab上做的，维护性不是很好，
现在已经迁移到confluence，可以自动生成接口列表，按照特定的规则排序，分类等，维护效率要比之前高很多。
现在，每个迭代都会抽一部分时间去让大家完善文档，希望在8月中下旬的时候完成所有的接口文档。目前ci已经
成功接入，最早的时候也结果ci，但是，当时的使用姿势不太对，导致很难去推这个事情，而且大家在本地做
一些测试也不方便。现状是，ci这部分已经完全搞定，我们的ci一直再跑。但是，对于接口这部分，测试同学
对框架，还有几本的自动化测试技术不太了解，导致ci跑测试的时候，由于测试脚本的问题挂掉。这部分需要技术
这边给测试做一些基础的培训，让测试同学了解最几本的单元测试，技术以及测试框架的使用方式。

新流程的一些其它问题：

- 会议时间大大增加，需要一周的时间去开会，对于team leander来说，会议时间过长
- 我们没有足够多的负责人去跟所有的需求，跟进需求的进度，完成的质量等
- 大量的重复性工作

这几项不太想继续展开说了，之后，有时间再来阐述。
